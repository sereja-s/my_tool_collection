/* 
Инструкция if(...) вычисляет условие в скобках и, если результат true, то выполняет блок кода
*/
let year = 2015;

if (year == 2015) console.log('Вы правы!');
/* 
В примере выше, условие – это простая проверка на равенство (year == 2015), но оно может быть и гораздо более сложным.
Если мы хотим выполнить более одной инструкции, то нужно заключить блок кода в фигурные скобки:
*/
if (year == 2015) {
	console.log("Правильно!");
	console.log("Вы такой умный!");
}

// Инструкция if (…) вычисляет выражение в скобках и преобразует результат к логическому типу
/* 
Давайте вспомним правила преобразования типов из главы Преобразование типов:

Число 0, пустая строка "", null, undefined и NaN становятся false. Из-за этого их называют «ложными» («falsy») значениями.
Остальные значения становятся true, поэтому их называют «правдивыми» («truthy»)
*/

// Мы также можем передать заранее вычисленное в переменной логическое значение в if:
let condition = (year == 2015); // преобразуется к true или false

if (condition) {
	console.log('2015-год в котором была опубликована спецификация ECMAScript-2015')
}

/* 
Блок «else»
Инструкция if может содержать необязательный блок «else» («иначе»). Он выполняется, когда условие ложно 
*/
let year1 = 2022;

if (year1 == 2015) {
	console.log('Да вы знаток!');
} else {
	console.log('А вот и неправильно!'); // любое значение, кроме 2015
}

/* 
Несколько условий: «else if»
Иногда, нужно проверить несколько вариантов условия. Для этого используется блок else if:
*/
let year2 = prompt('В каком году была опубликована спецификация ECMAScript-2015?', '');

if (year2 < 2015) {
	console.log('Это слишком рано...');
} else if (year2 > 2015) {
	console.log('Это поздновато');
} else {
	console.log('Верно!');
}
// Блоков else if может быть и больше. Присутствие блока else не является обязательным

/* 
Условный оператор „?“
Иногда нам нужно определить переменную в зависимости от условия
*/
let accessAllowed;
let age = prompt('Сколько вам лет?', '');

if (age > 18) {
	accessAllowed = 'доступ разрещён';
} else {
	accessAllowed = 'доступ запрещён';
}
console.log(accessAllowed);
/* 
Так называемый «условный» оператор «вопросительный знак» позволяет нам сделать это более коротким и простым способом.
Оператор представлен знаком вопроса ?. Его также называют «тернарный», так как этот оператор, единственный в своём роде, имеет три аргумента:
*/
// Синтаксис:
//let result = условие ? значение1 : значение2;

let accessAllowed1 = (age > 18) ? true : false; // Технически, мы можем опустить круглые скобки вокруг age > 18.
// Оператор вопросительного знака имеет низкий приоритет, поэтому он выполняется после сравнения >

// Несколько операторов „?“
// Последовательность операторов вопросительного знака ? позволяет вернуть значение, которое зависит от более чем одного условия
let message = (age < 3) ? 'Здравствуй, малыш!' :
	(age < 18) ? 'Привет!' :
		(age < 100) ? 'Здравствуйте!' :
			'Какой необычный возраст!';
/* 
Смысл оператора «вопросительный знак» ? – вернуть то или иное значение, в зависимости от условия. Пожалуйста, используйте его именно для этого. Когда вам нужно выполнить разные ветви кода – используйте if
*/
